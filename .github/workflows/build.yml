name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '33 13 * * *'

jobs:
  build:
    strategy:
      matrix:
        pgver: [15, 14, 13]
        os: [ubuntu-latest, macos-12]
        build_type: [Debug, Release]
        exclude:
          - os: macos-12
            pgver: 14
          - os: macos-12
            pgver: 13
          - os: macos-12
            pgver: 12
          - os: macos-12
            pgver: 11
      fail-fast: false
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install necessary dependencies
      # OpenSSL and `timeout` (from coreutils)
      if: matrix.os == 'macos-12'
      env:
        HOMEBREW_NO_AUTO_UPDATE: "1"
        HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: "1"
        HOMEBREW_NO_INSTALL_CLEANUP: "1"
      run: |
        brew update
        brew install openssl@3 coreutils

    - name: Setup Docker on macOS using Colima, Lima-VM, and Homebrew.
      uses: douglascamata/setup-docker-macos-action@v1-alpha
      if: matrix.os == 'macos-12' # No need to check on Linux, it's there

    - name: Configure Docker host on macOS
      if: matrix.os == 'macos-12'
      run: |
        echo "DOCKER_HOST=$(docker context inspect -f '{{ .Endpoints.docker.Host }}')" >> $GITHUB_ENV
        echo "DOCKER_HOST_IP=192.168.5.2" >> $GITHUB_ENV

    - uses: actions/cache@v3
      with:
        path: .pg
        key: ${{ matrix.os }}-pg-${{ matrix.pgver }}-${{ hashFiles('cmake/FindPostgreSQL.cmake') }}

    - name: Configure
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DPGVER=${{ matrix.pgver }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --parallel --config ${{matrix.build_type}}

    - name: Cache Docker images
      uses: omnigres/docker-cache@958f32b52e5881b23855dc30de9169ab11df0d39
      with:
        key: docker-${{ runner.os }}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: TMPDIR=$RUNNER_TEMP ctest -timeout 1000 --force-new-ctest-process --verbose --output-on-failure -j $(nproc) -C ${{matrix.build_type}}

    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: ${{ matrix.os }}-${{ matrix.pgver }}-regression.diffs
        path: ${{ github.workspace }}/build/extensions/**/regression.diffs

    - name: Print error-related artifacts
      if: failure()
      run: |
        echo "- diffs: "
        find ${{github.workspace}}/build -name \*.diffs -exec echo "=== {}:" \; -exec cat {} \;
        echo "- postmaster.log: "
        find ${{github.workspace}}/build -name postmaster.log -exec echo "=== {}:" \; -exec cat {} \;
        echo "- initdb.log: "
        find ${{github.workspace}}/build -name initdb.log -exec echo "=== {}:" \; -exec cat {} \;
